[{"/Users/taegwonson/Desktop/CallBus/src/index.tsx":"1","/Users/taegwonson/Desktop/CallBus/src/App.tsx":"2","/Users/taegwonson/Desktop/CallBus/src/pages/Home.tsx":"3","/Users/taegwonson/Desktop/CallBus/src/components/CategoryTab.tsx":"4","/Users/taegwonson/Desktop/CallBus/src/components/Post.tsx":"5","/Users/taegwonson/Desktop/CallBus/src/pages/Post.tsx":"6","/Users/taegwonson/Desktop/CallBus/src/components/PostDetail.tsx":"7","/Users/taegwonson/Desktop/CallBus/src/pages/MakePost.tsx":"8"},{"size":438,"mtime":1652365593789,"results":"9","hashOfConfig":"10"},{"size":677,"mtime":1652372290782,"results":"11","hashOfConfig":"10"},{"size":1740,"mtime":1652375497411,"results":"12","hashOfConfig":"10"},{"size":1559,"mtime":1652372474559,"results":"13","hashOfConfig":"10"},{"size":6117,"mtime":1652373221304,"results":"14","hashOfConfig":"10"},{"size":1801,"mtime":1652375522779,"results":"15","hashOfConfig":"10"},{"size":4161,"mtime":1652372479452,"results":"16","hashOfConfig":"10"},{"size":120,"mtime":1652375489004,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"qd2eh1",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/taegwonson/Desktop/CallBus/src/index.tsx",[],[],[],"/Users/taegwonson/Desktop/CallBus/src/App.tsx",[],[],"/Users/taegwonson/Desktop/CallBus/src/pages/Home.tsx",[],[],"/Users/taegwonson/Desktop/CallBus/src/components/CategoryTab.tsx",[],[],"/Users/taegwonson/Desktop/CallBus/src/components/Post.tsx",["44"],[],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\ninterface PostProps {\n  currentTab: number;\n}\nconst Post: React.FC<PostProps> = ({ currentTab }) => {\n  const [post, setPost] = useState<any>([]);\n  const navigate = useNavigate();\n  function timeForToday(value: string) {\n    const today = new Date();\n    const timeValue = new Date(value);\n\n    const betweenTime = Math.floor(\n      (today.getTime() - timeValue.getTime()) / 1000 / 60\n    );\n    if (betweenTime < 1) return \"방금전\";\n    if (betweenTime < 60) {\n      return `${betweenTime}분전`;\n    }\n\n    const betweenTimeHour = Math.floor(betweenTime / 60);\n    if (betweenTimeHour < 24) {\n      return `${betweenTimeHour}시간전`;\n    } else {\n      const overDate = value.split(\"T\")[0];\n      return overDate.slice(2, 10);\n    }\n  }\n\n  const axios_GetPost = async () => {\n    await axios.get(\"../../../data/Post.json\").then((res) => {\n      // const data = JSON.stringify(res.data.POSTS);\n      if (currentTab === 0) {\n        const data = res.data.POSTS;\n        setPost(data);\n      } else if (currentTab === 1) {\n        const data = res.data.POSTS.filter((el: any) => el.viewCount > 100);\n        setPost(data);\n      } else if (currentTab === 2) {\n        const data = res.data.POSTS.filter(\n          (el: any) => el.categoryName === \"대선청원\"\n        );\n        setPost(data);\n      } else if (currentTab === 3) {\n        const data = res.data.POSTS.filter(\n          (el: any) => el.categoryName === \"자유글\"\n        );\n        setPost(data);\n      } else if (currentTab === 4) {\n        const data = res.data.POSTS.filter(\n          (el: any) => el.categoryName === \"질문/답변\"\n        );\n        setPost(data);\n      } else if (currentTab === 5) {\n        const data = res.data.POSTS.filter(\n          (el: any) => el.categoryName === \"뉴스\"\n        );\n        setPost(data);\n      } else if (currentTab === 6) {\n        const data = res.data.POSTS.filter(\n          (el: any) => el.categoryName === \"노하우\"\n        );\n        setPost(data);\n      }\n    });\n  };\n  function textLengthOverCut(txt: string, len: any, lastTxt: string) {\n    if (len === \"\" || len === null) {\n      // 기본값\n      len = 20;\n    }\n    if (lastTxt === \"\" || lastTxt === null) {\n      // 기본값\n      lastTxt = \"...\";\n    }\n    if (txt.length > len) {\n      txt = txt.substring(0, len) + lastTxt;\n    }\n    return txt;\n  }\n  useEffect(() => {\n    axios_GetPost();\n  }, [currentTab]);\n  //console.log(currentTab);\n  //console.log(post.);\n\n  return (\n    <Container>\n      {post.map((el: any, key: number) => {\n        return (\n          <PostData key={key}>\n            <Header>\n              <img src={el.writerProfileUrl} alt={el.writerNickName} />\n              <div>\n                <div className=\"user_name\">{el.writerNickName}</div>\n                <div className=\"category\">\n                  {el.categoryName} • {timeForToday(el.writtenAt)}\n                </div>\n              </div>\n            </Header>\n            <Main>\n              <div\n                className=\"title\"\n                onClick={() => navigate(`/community/post/${el.pk}`)}\n              >\n                {el.title}\n              </div>\n              <div\n                className=\"content\"\n                onClick={() => navigate(`/community/post/${el.pk}`)}\n              >\n                {textLengthOverCut(el.content, 60, \"...\")}\n              </div>\n              {!el.imageUrl ? (\n                <></>\n              ) : (\n                <img\n                  className=\"content_image\"\n                  src={el.imageUrl}\n                  onClick={() => navigate(`/community/post/${el.pk}`)}\n                  alt=\"content_image\"\n                ></img>\n              )}\n              <PostInfo>\n                <span className=\"post_view\">\n                  <img src=\"../../../eye.svg\" alt=\"content_view\"></img>\n                  <span>{el.viewCount}</span>\n                </span>\n                <span className=\"post_likes\">\n                  <img src=\"../../../hand-thumbs-up.svg\" alt=\"thumbs-up\"></img>\n                  <span>{el.likeCount}</span>\n                </span>\n                <span className=\"post_comment\">\n                  <img src=\"../../../chat-dots.svg\" alt=\"chat\"></img>\n                  <span>{el.commentCount}</span>\n                </span>\n              </PostInfo>\n            </Main>\n            <Underbar />\n          </PostData>\n        );\n      })}\n      {/* <Header>\n        <img src={`${post.writerProfileUrl}`} alt={post.writerNickName} />\n      </Header>\n      <PostData></PostData> */}\n    </Container>\n  );\n};\nexport default Post;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 0 solid black;\n  width: 100%;\n`;\nconst PostData = styled.article`\n  margin: 0;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  padding: 14px 14px 14px 16px;\n  > img {\n    width: 32px;\n    height: 32px;\n    display: block;\n    border-radius: 50%;\n  }\n\n  .user_name {\n    display: flex;\n    height: 12px;\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 18px;\n    color: #222222;\n  }\n  .category {\n    color: #b4b4b4;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 18px;\n  }\n`;\n\nconst Main = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 14px 14px 14px 16px;\n  .title {\n    font-size: 16px;\n    font-weight: 700;\n    line-height: 25px;\n    color: #222222;\n    margin-bottom: 6px;\n    cursor: pointer;\n  }\n  .content {\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 25px;\n    color: #7a7a7a;\n    cursor: pointer;\n  }\n  .content_image {\n    height: 160px;\n    cursor: pointer;\n  }\n`;\nconst Underbar = styled.div`\n  width: 360px;\n  margin: 0;\n  padding: 0;\n  height: 6px;\n  background-color: #e8e8e8;\n`;\nconst PostInfo = styled.div`\n  > span {\n    color: #b4b4b4;\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 12px;\n    > img {\n      width: 14px;\n      height: 10px;\n      color: #b4b4b4;\n    }\n  }\n`;\n","/Users/taegwonson/Desktop/CallBus/src/pages/Post.tsx",["45","46"],[],"/Users/taegwonson/Desktop/CallBus/src/components/PostDetail.tsx",[],[],"/Users/taegwonson/Desktop/CallBus/src/pages/MakePost.tsx",[],[],{"ruleId":"47","severity":1,"message":"48","line":85,"column":6,"nodeType":"49","endLine":85,"endColumn":18,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":22,"column":33,"nodeType":"53","messageId":"54","endLine":22,"endColumn":34},{"ruleId":"47","severity":1,"message":"55","line":27,"column":6,"nodeType":"49","endLine":27,"endColumn":8,"suggestions":"56"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'axios_GetPost'. Either include it or remove the dependency array.","ArrayExpression",["57"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'axios_GetPost_Detail'. Either include it or remove the dependency array.",["58"],{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Update the dependencies array to be: [axios_GetPost, currentTab]",{"range":"63","text":"64"},"Update the dependencies array to be: [axios_GetPost_Detail]",{"range":"65","text":"66"},[2501,2513],"[axios_GetPost, currentTab]",[911,913],"[axios_GetPost_Detail]"]