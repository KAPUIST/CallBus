[{"/Users/taegwonson/Desktop/CallBus/src/index.tsx":"1","/Users/taegwonson/Desktop/CallBus/src/App.tsx":"2","/Users/taegwonson/Desktop/CallBus/src/pages/Home.tsx":"3","/Users/taegwonson/Desktop/CallBus/src/components/CategoryTab.tsx":"4","/Users/taegwonson/Desktop/CallBus/src/components/Post.tsx":"5","/Users/taegwonson/Desktop/CallBus/src/pages/Post.tsx":"6","/Users/taegwonson/Desktop/CallBus/src/components/PostDetail.tsx":"7"},{"size":438,"mtime":1652365593789,"results":"8","hashOfConfig":"9"},{"size":566,"mtime":1652359048376,"results":"10","hashOfConfig":"9"},{"size":1762,"mtime":1652368121511,"results":"11","hashOfConfig":"9"},{"size":1559,"mtime":1652350298143,"results":"12","hashOfConfig":"9"},{"size":6006,"mtime":1652369166194,"results":"13","hashOfConfig":"9"},{"size":2391,"mtime":1652370183895,"results":"14","hashOfConfig":"9"},{"size":4030,"mtime":1652370210284,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"qd2eh1",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"19"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"19"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"/Users/taegwonson/Desktop/CallBus/src/index.tsx",[],[],[],"/Users/taegwonson/Desktop/CallBus/src/App.tsx",[],[],[],"/Users/taegwonson/Desktop/CallBus/src/pages/Home.tsx",[],[],"/Users/taegwonson/Desktop/CallBus/src/components/CategoryTab.tsx",[],[],[],"/Users/taegwonson/Desktop/CallBus/src/components/Post.tsx",["43","44","45","46","47","48","49"],[],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\ninterface PostProps {\n  currentTab: number;\n}\nconst Post: React.FC<PostProps> = ({ currentTab }) => {\n  const [post, setPost] = useState<any>([]);\n  const navigate = useNavigate();\n  function timeForToday(value: string) {\n    const today = new Date();\n    const timeValue = new Date(value);\n\n    const betweenTime = Math.floor(\n      (today.getTime() - timeValue.getTime()) / 1000 / 60\n    );\n    if (betweenTime < 1) return \"방금전\";\n    if (betweenTime < 60) {\n      return `${betweenTime}분전`;\n    }\n\n    const betweenTimeHour = Math.floor(betweenTime / 60);\n    if (betweenTimeHour < 24) {\n      return `${betweenTimeHour}시간전`;\n    } else {\n      const overDate = value.split(\"T\")[0];\n      return overDate.slice(2, 10);\n    }\n  }\n\n  const axios_GetPost = async () => {\n    await axios.get(\"../../../data/Post.json\").then((res) => {\n      // const data = JSON.stringify(res.data.POSTS);\n      if (currentTab === 0) {\n        const data = res.data.POSTS;\n        setPost(data);\n      } else if (currentTab === 1) {\n        const data = res.data.POSTS.filter((el: any) => el.viewCount > 100);\n        setPost(data);\n      } else if (currentTab === 2) {\n        const data = res.data.POSTS.filter(\n          (el: any) => el.categoryName === \"대선청원\"\n        );\n        setPost(data);\n      } else if (currentTab === 3) {\n        const data = res.data.POSTS.filter(\n          (el: any) => el.categoryName === \"자유글\"\n        );\n        setPost(data);\n      } else if (currentTab === 4) {\n        const data = res.data.POSTS.filter(\n          (el: any) => el.categoryName === \"질문/답변\"\n        );\n        setPost(data);\n      } else if (currentTab === 5) {\n        const data = res.data.POSTS.filter(\n          (el: any) => el.categoryName === \"뉴스\"\n        );\n        setPost(data);\n      } else if (currentTab === 6) {\n        const data = res.data.POSTS.filter(\n          (el: any) => el.categoryName === \"노하우\"\n        );\n        setPost(data);\n      }\n    });\n  };\n  function textLengthOverCut(txt: string, len: any, lastTxt: string) {\n    if (len == \"\" || len == null) {\n      // 기본값\n      len = 20;\n    }\n    if (lastTxt == \"\" || lastTxt == null) {\n      // 기본값\n      lastTxt = \"...\";\n    }\n    if (txt.length > len) {\n      txt = txt.substring(0, len) + lastTxt;\n    }\n    return txt;\n  }\n  useEffect(() => {\n    axios_GetPost();\n  }, [currentTab]);\n  //console.log(currentTab);\n  //console.log(post.);\n\n  return (\n    <Container>\n      {post.map((el: any) => {\n        return (\n          <PostData>\n            <Header>\n              <img src={el.writerProfileUrl} alt={el.writerNickName} />\n              <div>\n                <div className=\"user_name\">{el.writerNickName}</div>\n                <div className=\"category\">\n                  {el.categoryName} • {timeForToday(el.writtenAt)}\n                </div>\n              </div>\n            </Header>\n            <Main>\n              <div\n                className=\"title\"\n                onClick={() => navigate(`/community/post/${el.pk}`)}\n              >\n                {el.title}\n              </div>\n              <div\n                className=\"content\"\n                onClick={() => navigate(`/community/post/${el.pk}`)}\n              >\n                {textLengthOverCut(el.content, 60, \"...\")}\n              </div>\n              {!el.imageUrl ? (\n                <></>\n              ) : (\n                <img\n                  className=\"content_image\"\n                  src={el.imageUrl}\n                  onClick={() => navigate(`/community/post/${el.pk}`)}\n                ></img>\n              )}\n              <PostInfo>\n                <span className=\"post_view\">\n                  <img src=\"../../../eye.svg\"></img>\n                  <span>{el.viewCount}</span>\n                </span>\n                <span className=\"post_likes\">\n                  <img src=\"../../../hand-thumbs-up.svg\"></img>\n                  <span>{el.likeCount}</span>\n                </span>\n                <span className=\"post_comment\">\n                  <img src=\"../../../chat-dots.svg\"></img>\n                  <span>{el.commentCount}</span>\n                </span>\n              </PostInfo>\n            </Main>\n            <Underbar />\n          </PostData>\n        );\n      })}\n      {/* <Header>\n        <img src={`${post.writerProfileUrl}`} alt={post.writerNickName} />\n      </Header>\n      <PostData></PostData> */}\n    </Container>\n  );\n};\nexport default Post;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 0 solid black;\n  width: 100%;\n`;\nconst PostData = styled.article`\n  margin: 0;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  padding: 14px 14px 14px 16px;\n  > img {\n    width: 32px;\n    height: 32px;\n    display: block;\n    border-radius: 50%;\n  }\n\n  .user_name {\n    display: flex;\n    height: 12px;\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 18px;\n    color: #222222;\n  }\n  .category {\n    color: #b4b4b4;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 18px;\n  }\n`;\n\nconst Main = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 14px 14px 14px 16px;\n  .title {\n    font-size: 16px;\n    font-weight: 700;\n    line-height: 25px;\n    color: #222222;\n    margin-bottom: 6px;\n    cursor: pointer;\n  }\n  .content {\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 25px;\n    color: #7a7a7a;\n    cursor: pointer;\n  }\n  .content_image {\n    height: 160px;\n    cursor: pointer;\n  }\n`;\nconst Underbar = styled.div`\n  width: 360px;\n  margin: 0;\n  padding: 0;\n  height: 6px;\n  background-color: #e8e8e8;\n`;\nconst PostInfo = styled.div`\n  > span {\n    color: #b4b4b4;\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 12px;\n    > img {\n      width: 14px;\n      height: 10px;\n      color: #b4b4b4;\n    }\n  }\n`;\n","/Users/taegwonson/Desktop/CallBus/src/pages/Post.tsx",["50","51","52"],[],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport PostDetail from \"../components/PostDetail\";\n\nconst Post = () => {\n  const navigator = useNavigate();\n  const handleBackArrow = () => {\n    navigator(\"/community/list\");\n  };\n  let { post_pk } = useParams();\n  const [postDetail, setPostDetail] = useState<any>([]);\n  const [init, setInit] = useState<number>(0);\n  //console.log(post_pk, \"pk\");\n  function timeForToday(value: string) {\n    // console.log(value);\n    const today = new Date();\n    const timeValue = new Date(value);\n\n    const betweenTime = Math.floor(\n      (today.getTime() - timeValue.getTime()) / 1000 / 60\n    );\n    if (betweenTime < 1) return \"방금전\";\n    if (betweenTime < 60) {\n      return `${betweenTime}분전`;\n    }\n\n    const betweenTimeHour = Math.floor(betweenTime / 60);\n    if (betweenTimeHour < 24) {\n      return `${betweenTimeHour}시간전`;\n    } else {\n      const overDate = value.split(\"T\")[0];\n      return overDate.slice(2, 10);\n    }\n  }\n\n  const axios_GetPost_Detail = async () => {\n    await axios.get(\"../../../data/Post.json\").then((el) => {\n      //console.log(el.data.POSTS, \"post\");\n      const data = el.data.POSTS.filter((el: any) => el.pk === Number(post_pk));\n      ///console.log(data, \"???\");\n      return setPostDetail(data), setInit(1);\n    });\n  };\n  useEffect(() => {\n    axios_GetPost_Detail();\n  }, []);\n\n  console.log(postDetail, \"detail\");\n  return (\n    <Container>\n      <Nav>\n        <img\n          className=\"arrow\"\n          src={\"../../../arrow-left.svg\"}\n          alt=\"back-arrow\"\n          onClick={() => handleBackArrow()}\n        ></img>\n        <div className=\"arrow-explain\">글 목록으로</div>\n      </Nav>\n      <PostDetail postDetail={postDetail} init={init} />\n    </Container>\n  );\n};\nexport default Post;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: solid grey 1px;\n  border-radius: 10px;\n  width: 360px;\n  height: 830px;\n`;\nconst Nav = styled.div`\n  display: flex;\n  flex-direction: row;\n  .arrow {\n    width: 18px;\n    height: 18px;\n    margin: 21px 11px 10px 21px;\n    cursor: pointer;\n  }\n  .arrow-explain {\n    margin-top: 21px;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 15px;\n    color: #b4b4b4;\n  }\n`;\n","/Users/taegwonson/Desktop/CallBus/src/components/PostDetail.tsx",["53","54","55"],[],"import React from \"react\";\nimport styled from \"styled-components\";\ninterface DetailProps {\n  postDetail: [\n    {\n      categoryPk: number;\n      categoryName: string;\n      pk: number;\n      title: string;\n      content: string;\n      viewCount: number;\n      likeCount: number;\n      commentCount: number;\n      imageUrl: null | string;\n      writtenAt: string;\n      writerNickName: string;\n      writerProfileUrl: string;\n    }\n  ];\n  init: number;\n}\n\nconst PostDetail: React.FC<DetailProps> = ({ postDetail, init }) => {\n  function timeForToday(value: string) {\n    const today = new Date();\n    const timeValue = new Date(value);\n\n    const betweenTime = Math.floor(\n      (today.getTime() - timeValue.getTime()) / 1000 / 60\n    );\n    if (betweenTime < 1) return \"방금전\";\n    if (betweenTime < 60) {\n      return `${betweenTime}분전`;\n    }\n\n    const betweenTimeHour = Math.floor(betweenTime / 60);\n    if (betweenTimeHour < 24) {\n      return `${betweenTimeHour}시간전`;\n    } else {\n      const overDate = value.split(\"T\")[0];\n      return overDate.slice(2, 10);\n    }\n  }\n\n  return (\n    <Container>\n      {init ? (\n        <PostData>\n          <Header>\n            <img\n              src={postDetail[0].writerProfileUrl}\n              alt={postDetail[0].writerNickName}\n            />\n            <div>\n              <div className=\"user_name\">{postDetail[0].writerNickName}</div>\n              <div className=\"category\">\n                {postDetail[0].categoryName} •\n                {timeForToday(postDetail[0].writtenAt)}\n              </div>\n            </div>\n          </Header>\n          <Main>\n            <div className=\"title\">{postDetail[0].title}</div>\n            <div className=\"content\">{postDetail[0].content}</div>\n            {!postDetail[0].imageUrl ? (\n              <></>\n            ) : (\n              <img className=\"content_image\" src={postDetail[0].imageUrl}></img>\n            )}\n            <PostInfo>\n              <span className=\"post_likes\">\n                <img src=\"../../../hand-thumbs-up.svg\"></img>\n                <span>{postDetail[0].likeCount}</span>\n              </span>\n              <span className=\"post_comment\">\n                <img src=\"../../../chat-dots.svg\"></img>\n                <span>{postDetail[0].commentCount}</span>\n              </span>\n            </PostInfo>\n          </Main>\n        </PostData>\n      ) : (\n        \"\"\n      )}\n    </Container>\n  );\n};\n\nexport default PostDetail;\nconst Container = styled.div`\n  display: flex;\n  ::-webkit-scrollbar {\n    display: none; /* Chrome, Safari, Opera*/\n  }\n  overflow: auto;\n  flex-direction: column;\n  border: 0 solid black;\n  width: 100%;\n`;\nconst PostData = styled.article`\n  margin: 0;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  padding: 14px 14px 14px 16px;\n  > img {\n    width: 32px;\n    height: 32px;\n    display: block;\n    border-radius: 50%;\n  }\n\n  .user_name {\n    display: flex;\n    height: 12px;\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 18px;\n    color: #222222;\n  }\n  .category {\n    color: #b4b4b4;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 18px;\n  }\n`;\n\nconst Main = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .title {\n    padding: 14px 14px 14px 16px;\n    font-size: 16px;\n    font-weight: 700;\n    line-height: 25px;\n    color: #222222;\n    margin-bottom: 6px;\n    cursor: pointer;\n  }\n  .content {\n    padding: 14px 14px 14px 16px;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 25px;\n    color: #7a7a7a;\n    cursor: pointer;\n  }\n  .content_image {\n    width: 358px;\n    height: 356px;\n    margin-bottom: 15px;\n    cursor: pointer;\n  }\n`;\nconst PostInfo = styled.div`\n  margin-bottom: 20px;\n  > span {\n    margin-left: 25px;\n    padding: 9px 9px 9px 9px;\n    background-color: #f8f8f8;\n    border-radius: 6px;\n    color: #b4b4b4;\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 12px;\n    > img {\n      margin-right: 5px;\n      width: 14px;\n      height: 10px;\n      color: #b4b4b4;\n    }\n  }\n`;\n",{"ruleId":"56","severity":1,"message":"57","line":70,"column":13,"nodeType":"58","messageId":"59","endLine":70,"endColumn":15},{"ruleId":"56","severity":1,"message":"57","line":74,"column":17,"nodeType":"58","messageId":"59","endLine":74,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":85,"column":6,"nodeType":"62","endLine":85,"endColumn":18,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":119,"column":17,"nodeType":"66","endLine":123,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":127,"column":19,"nodeType":"66","endLine":127,"endColumn":47},{"ruleId":"64","severity":1,"message":"65","line":131,"column":19,"nodeType":"66","endLine":131,"endColumn":58},{"ruleId":"64","severity":1,"message":"65","line":135,"column":19,"nodeType":"66","endLine":135,"endColumn":53},{"ruleId":"67","severity":1,"message":"68","line":16,"column":12,"nodeType":"69","messageId":"70","endLine":16,"endColumn":24},{"ruleId":"71","severity":1,"message":"72","line":43,"column":33,"nodeType":"73","messageId":"74","endLine":43,"endColumn":34},{"ruleId":"60","severity":1,"message":"75","line":48,"column":6,"nodeType":"62","endLine":48,"endColumn":8,"suggestions":"76"},{"ruleId":"64","severity":1,"message":"65","line":68,"column":15,"nodeType":"66","endLine":68,"endColumn":75},{"ruleId":"64","severity":1,"message":"65","line":72,"column":17,"nodeType":"66","endLine":72,"endColumn":56},{"ruleId":"64","severity":1,"message":"65","line":76,"column":17,"nodeType":"66","endLine":76,"endColumn":51},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'axios_GetPost'. Either include it or remove the dependency array.","ArrayExpression",["77"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'timeForToday' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'axios_GetPost_Detail'. Either include it or remove the dependency array.",["78"],{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [axios_GetPost, currentTab]",{"range":"83","text":"84"},"Update the dependencies array to be: [axios_GetPost_Detail]",{"range":"85","text":"86"},[2497,2509],"[axios_GetPost, currentTab]",[1485,1487],"[axios_GetPost_Detail]"]